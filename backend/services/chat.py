from openai import OpenAI
import os
from dotenv import load_dotenv
import json

load_dotenv()  # Esto carga las variables del .env

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def get_gpt_response(prompt, model="gpt-4o", system_prompt=None, temperature=0.7, conversation_history=None):
    """
    Obtiene respuesta de GPT optimizada para trading con contexto de conversaci칩n
    
    Args:
        prompt: Mensaje del usuario
        model: Modelo a usar (gpt-4o, gpt-4o-mini, gpt-4-turbo)
        system_prompt: Prompt del sistema para definir el contexto
        temperature: Creatividad de la respuesta (0.0-1.0)
        conversation_history: Lista de mensajes previos para mantener contexto
    """
    
    # Prompt del sistema por defecto para trading
    if not system_prompt:
        system_prompt = """Eres **MentorBot IA**, un experto analista de trading especializado en:

## 游늵 **An치lisis T칠cnico**
- Interpretaci칩n de gr치ficos de velas japonesas
- Identificaci칩n de patrones de continuaci칩n y reversi칩n
- An치lisis de soportes, resistencias y tendencias
- Uso de indicadores t칠cnicos (RSI, MACD, Bollinger Bands, etc.)

## 游눯 **Gesti칩n de Riesgo**
- C치lculo de ratios riesgo/beneficio
- Determinaci칩n de tama침os de posici칩n
- Establecimiento de stop-loss y take-profit
- Diversificaci칩n de portafolio

## 游늳 **Estrategias de Inversi칩n**
- Swing trading y day trading
- Inversi칩n a largo plazo
- An치lisis fundamental b치sico
- Timing de mercado

## 游꿢 **Formato de Respuesta**
Usa **Markdown** para estructurar tus respuestas:
- **T칤tulos** con ### para secciones principales
- **Listas** con - o 1. para puntos clave
- **C칩digo** con \`\`\` para ejemplos
- **Tablas** para comparaciones
- **Citas** con > para advertencias importantes

## 丘멆잺 **Advertencias Obligatorias**
Siempre incluye advertencias de riesgo apropiadas y recuerda que:
- El trading conlleva riesgo de p칠rdida
- Los an치lisis son educativos, no consejos financieros
- Cada trader debe hacer su propio an치lisis

Mant칠n un tono profesional pero accesible, y estructura bien la informaci칩n para facilitar la lectura."""
    
    # Construir el array de mensajes con contexto
    messages = [{"role": "system", "content": system_prompt}]
    
    # Agregar historial de conversaci칩n si existe
    if conversation_history:
        messages.extend(conversation_history)
    
    # Agregar el mensaje actual
    messages.append({"role": "user", "content": prompt})
    
    try:
        response = client.chat.completions.create(
            model=model,
            messages=messages,
            temperature=temperature,
            max_tokens=4000,  # Suficiente para an치lisis detallado
            stream=False  # Para respuestas completas
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"Error al procesar la respuesta: {str(e)}"

def get_trading_analysis(prompt, include_risk_assessment=True, conversation_history=None):
    """
    Funci칩n especializada para an치lisis de trading con contexto
    """
    if include_risk_assessment:
        enhanced_prompt = f"{prompt}\n\nPor favor incluye una evaluaci칩n de riesgo y posibles escenarios."
    else:
        enhanced_prompt = prompt
    
    return get_gpt_response(
        prompt=enhanced_prompt,
        model="gpt-4o",
        temperature=0.3,  # M치s conservador para an치lisis financiero
        conversation_history=conversation_history,
        system_prompt="""Eres un analista de trading experto. Proporciona an치lisis t칠cnico preciso, 
        identifica patrones en gr치ficos, calcula niveles de soporte/resistencia, y siempre 
        incluye advertencias de riesgo apropiadas. Usa Markdown para estructurar bien la informaci칩n."""
    )

def get_quick_analysis(prompt, conversation_history=None):
    """
    Para an치lisis r치pidos y b치sicos (usando modelo m치s econ칩mico)
    """
    return get_gpt_response(
        prompt=prompt,
        model="gpt-4o-mini",
        temperature=0.5,
        conversation_history=conversation_history
    )

def analyze_chart_image(image_url, prompt=""):
    """
    Para an치lisis de im치genes de gr치ficos (requiere GPT-4o con visi칩n)
    """
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {
                    "role": "system",
                    "content": "Eres un experto en an치lisis t칠cnico. Analiza este gr치fico de trading identificando patrones, tendencias, soportes, resistencias y posibles se침ales de entrada/salida."
                },
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": f"Analiza este gr치fico de trading: {prompt}"},
                        {"type": "image_url", "image_url": {"url": image_url}}
                    ]
                }
            ],
            max_tokens=2000
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"Error al analizar la imagen: {str(e)}"